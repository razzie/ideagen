package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _character = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x92\x41\x72\xe4\x20\x0c\x45\xf7\x54\x71\x07\x0e\xc0\x8d\x52\x59\xc8\x58\x06\x4d\x83\x44\x84\x48\x4f\xe7\xf4\x53\x72\x67\x56\x58\x7c\xc9\x7c\xde\x07\x3a\x21\xc7\x30\x84\x97\xa1\xc6\xf0\xa4\x1f\xd0\xd3\x57\x2b\x2d\x06\x38\xbf\x91\x6d\xab\x4b\xb0\x16\xac\x45\x1c\xc3\x02\xea\xa2\x31\x94\x86\x57\x0c\x2a\x87\x58\x0c\xb5\xc9\xb2\x18\xda\x1e\xe0\x2d\x0f\xec\x68\xc2\x31\x7c\x9c\xbb\x3c\x72\xaa\x22\x0b\x73\x9a\xc8\x75\x13\xe7\x74\xd1\x6a\x39\x3d\x1b\x74\xcc\x69\x35\xd0\xc7\x67\x0c\x1f\x73\xcf\xf9\xca\xe9\x94\x9a\xd3\x83\xcc\x90\x73\x2a\x60\x39\x0d\x18\x43\xac\xe5\x74\x12\xcb\x82\xad\x39\x9d\x0a\x55\xd8\xa7\x0e\xc4\x9c\x80\x2d\xa7\xab\xbf\x72\x1a\xb2\xbe\x36\x99\x7c\xc6\xb0\x58\x9e\x6f\x3f\x85\x90\x8d\xdc\xe1\x54\xa9\x0a\x63\xf8\x9d\x96\xed\x13\xd9\x62\x78\xc9\xb6\x7d\xf8\x16\xf1\xd5\x37\x72\xf1\xef\x82\x1d\x0f\x25\x7b\xf9\x14\x2e\x7a\xf7\x4e\xe9\x64\x54\xc8\xff\xfb\x71\xec\x45\x8c\x6b\x0d\xe0\x9c\xfe\x17\x4f\x19\xe0\xce\x70\x4c\x54\x27\x55\xe5\x8c\x81\x89\xff\x40\x0c\x86\xa5\xb1\xcc\x26\x07\xc6\xf0\x0d\x63\x92\x62\x0c\x0d\xca\xc3\x8f\xfc\x91\x71\x10\xc6\x00\xc5\x48\x38\x5d\x54\xb7\xcb\x15\x65\xa0\x29\x15\x67\x35\x31\x06\x6b\xe4\xf0\x27\x29\x98\xb7\xab\xd1\xe5\x9e\x7a\x22\x36\xec\x9d\xaa\xdf\xc1\x91\x2a\x71\x71\xf2\xf7\xba\x96\x83\xe5\x9a\xd3\xd7\x46\xbc\xe9\x55\x05\x3e\x1d\x2e\x6a\x4e\x77\x71\x81\x17\xae\x99\x4a\xef\x1e\xde\xd1\x3d\x34\xd1\x92\xd3\xf9\x04\xbd\x3e\x63\x78\x30\xd5\x66\x31\x5c\xa0\xe3\xfd\x3e\x4c\x85\x61\x3b\x21\xea\xfe\x24\x4a\x93\x22\x1d\x8c\x6e\x59\x4b\x43\xe9\x52\xef\x10\x4e\x29\xe6\x60\x9c\x65\xc1\x24\xd7\x45\x37\xf1\x13\x0d\x8b\xd1\x37\xc6\x30\x5f\xea\x18\x09\x4a\x0c\x15\xee\x23\x0c\xfe\xa6\x22\xbd\xe3\xef\x70\xdf\xe3\xce\x0c\x7d\x47\x7f\x23\x19\x58\x1a\x30\x95\x7f\x01\x00\x00\xff\xff\x1d\x50\x5e\x62\xdb\x02\x00\x00")

func character() ([]byte, error) {
	return bindata_read(
		_character,
		"character",
	)
}

var _character_description = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x91\x51\xae\x9d\x30\x0c\x44\xff\x23\x65\x0f\x2c\xe0\xb2\xa2\xa7\xf7\x61\xc8\x10\xac\x6b\x1c\xea\x24\xf0\xd2\xd5\x57\xe6\xaa\xed\x17\x01\xe2\xf1\xcc\x99\xc6\x3a\x62\xc8\x9c\x49\x1b\xaf\x31\x48\x51\xc8\x88\xa1\xf1\x81\xb9\x19\x5d\x10\x61\xcd\x31\xe0\x62\x89\x01\x54\x59\xc6\xbc\x19\xe7\xbd\x41\x91\x62\xc0\x4f\x33\x1c\x90\x31\x7d\x51\x6b\x46\x6b\xe3\x0b\xaf\xa9\xee\xc5\xda\x6b\x6a\x24\xf2\x9a\x58\x1b\x1f\x9c\xa8\xb1\xe6\xd7\xb4\x4a\x3f\xea\xf8\x8e\x21\x97\x92\x66\x29\xe5\xfd\x6c\x58\x4b\x37\xca\x28\xbd\xc6\x40\xfa\xc3\xcf\x61\x2b\x96\xd1\xb6\x2e\x31\x6c\x74\x3c\x9f\xea\x3e\x62\xa8\x2b\xd9\xf8\x3f\x5b\x14\x33\x86\xdb\x59\x8a\xf9\x83\x8e\x85\xdb\x47\xe2\x2c\x37\x6c\xde\xbb\x66\xf3\x60\x77\x99\x77\x50\xf2\x4b\x37\x57\xc4\x00\x49\x30\xcf\x9c\x0d\x48\x23\x06\xd6\x8b\x2b\x2f\x82\x18\x0e\xca\xbc\x92\xc4\xb0\x08\x6b\x8a\xe1\x04\xad\x98\xa5\x5c\xcf\xd6\xb3\x08\x37\xc4\x70\x17\x33\x76\x41\xeb\x09\x31\x64\x28\x9a\x8f\x39\x93\xa3\x24\xde\x18\xe9\x35\x41\x77\xd2\x15\xc9\x83\x5b\x3f\xce\x11\xc3\xba\x93\x1d\x1f\xbc\x0a\x0f\xea\x15\xb0\x2f\x55\x72\xb3\x5f\x5d\x37\x63\x68\x92\xf1\x9a\xfe\x9e\xbe\x63\x50\xd8\xf5\x64\x2b\xa7\x83\xad\xcf\xdc\x89\x5a\xff\xbd\x74\x4d\xa0\x14\xc3\xaf\xce\xf6\x76\x5e\x64\x2b\x7d\x7e\xdd\x10\x99\x93\xa1\x56\xb7\x2c\xf4\xdb\xa9\x90\xbc\xc9\x8b\x8b\xc1\xca\xf0\xc0\x6b\x57\xfd\x84\x14\x1a\x0f\xff\x13\xaa\x2c\xa8\xd5\x25\x48\x9a\xd7\xc0\xc7\x49\x8d\xa1\xcd\x61\x6a\x9a\xfb\xe9\x8a\xf7\xfc\x45\x0b\x27\x2f\x7b\x31\x90\x57\xf4\x1d\x43\xb9\x60\x33\xb4\xed\xbd\xf2\x63\xe5\x4f\x00\x00\x00\xff\xff\x2f\x7e\x4f\x62\x7c\x02\x00\x00")

func character_description() ([]byte, error) {
	return bindata_read(
		_character_description,
		"character_description",
	)
}

var _character_description_post = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x92\xc1\xae\xec\x36\x08\x86\xf7\x95\xfa\x0e\x2c\x7b\x24\xcf\x13\x45\x77\x41\x6c\x92\xa0\x21\x60\x01\x99\x28\xf7\xe9\x2b\xe7\xcc\xe8\x9e\x76\xe5\xe0\x18\xf8\x7e\x7e\x16\xb7\x1d\xa6\xdc\x08\x96\x23\x0f\xa7\x02\xa8\x96\x1b\x39\x74\x41\xa5\xfc\x13\x37\xde\x49\x83\x4d\xc7\x15\xa0\x24\xb9\x62\x12\x38\xa1\x70\x5e\x05\x10\x3a\x3a\x8a\x90\xc0\xa1\xfc\x22\x0f\xfa\xf5\xf7\x5f\x27\xe7\x06\x6a\x30\x2d\xce\xa4\x2d\x0a\xec\xa6\x74\x8d\xc3\x51\xa2\x40\xd8\x21\xe3\xdd\x66\x20\xf6\xa2\x80\xe9\xc9\x99\xa4\x51\xa0\x1f\xbd\x33\x45\x01\x47\xd6\xd9\xce\x28\x50\xd1\x47\x4e\xc7\x4a\xb1\x71\x8f\x01\xc3\xfb\x5d\x68\x11\x3b\x69\xfc\x15\xd3\x15\x4e\x94\x67\x14\x38\x9d\x93\x75\x2d\x30\xe3\xf3\x3e\x57\xf4\x46\x7a\x7f\x2e\x1c\xdb\xfb\xc3\xe9\x8d\xf0\x0f\x47\x41\xa7\x2f\xe8\x18\x43\xec\x50\x88\xb3\x1d\x09\x93\x53\xbd\xaa\xdc\x09\xbb\x35\x12\xc8\x81\x15\x05\xa8\x1d\x15\xf3\x3d\x99\x01\xf3\x70\x5e\xb7\x1c\x9c\x89\x7b\x7f\x54\x13\xa1\xfa\x8d\x81\x5e\xb1\x11\xac\xb8\x0f\x5d\xb3\xa1\xb7\x4f\x90\x84\x9f\x79\x4d\x38\x8a\xaf\x5c\x61\xc6\xfa\x8c\x34\xbf\xbe\xa7\xde\xcc\x71\x16\x82\x7e\x3b\x03\x41\xd5\x29\x21\x8e\x4e\xde\x87\xfa\x1f\x97\xdc\x48\x93\xf3\xfa\x08\xab\xa8\xa5\xa2\x7e\xc1\xb4\xc8\x55\x60\x26\x6d\x90\xbc\x53\x81\x3c\x5c\x81\xf5\xc5\xc1\xb3\x8c\x98\x84\xba\x79\x16\x88\x63\xdf\x4d\x21\x3a\x3b\x67\x7c\xe8\x10\x1a\xcd\x2c\x9c\x38\x34\xc1\x42\xe8\x60\x0b\x4c\x1b\xbd\x65\xaf\x9b\x45\xde\x8e\x5c\xb7\xe8\x13\x73\xa0\xcd\x34\x9e\xa3\x98\x52\x81\x4e\xd6\x47\xb3\x59\xcc\x5a\x81\xd8\x51\xe4\xed\x6b\x81\xea\x76\xb6\xdb\x67\x6e\xe4\x3f\x1a\x27\x69\x23\xad\x17\xa4\xc1\x64\x2f\x72\x27\xac\x59\x60\x41\xd6\x04\x4c\x18\x9b\x1c\x03\x63\x10\x7d\x6a\x77\xd3\x44\x25\x3b\x42\x2e\xa8\xb6\xcf\x47\x64\x81\x91\xfe\x88\x0d\xff\x78\x2f\x86\xb9\x51\x94\xef\xf3\x0b\xa6\x17\x9b\x90\x56\x2a\x10\x27\xef\xfb\x2d\xa6\xe1\x25\xa3\x41\x01\xb7\xd9\x86\xcc\xed\xd8\x71\xec\x01\x0a\x93\xfe\x80\xad\xa6\xe9\xa3\x4b\x30\x0a\x58\x67\x65\x53\x30\x85\xa9\x9b\x70\x72\x1d\x2b\xce\xbf\x7f\x23\xa4\xf5\xce\xba\xfe\x77\x97\x3e\xe5\xa3\xf2\x60\xf8\xff\x82\x62\x6b\x5c\x93\xda\x3d\x8a\xba\x59\x35\xc1\xa4\x77\xc5\x31\x91\xc8\xc7\x72\xeb\xaf\xe8\x69\x36\x08\x1b\xea\x3a\x9c\x48\xc2\x02\xd5\x96\x85\xe8\xd7\xbf\x01\x00\x00\xff\xff\x25\x69\x0b\x28\x02\x04\x00\x00")

func character_description_post() ([]byte, error) {
	return bindata_read(
		_character_description_post,
		"character_description_post",
	)
}

var _genre = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x41\x8e\xe5\x20\x0c\x44\xf7\x48\xdc\x81\x03\x90\x13\xb5\xfe\xc2\x01\x27\xa0\x38\x38\xb2\x4d\x7e\xa7\x4f\x3f\x22\xf9\x33\x9a\x5e\x41\x3d\x5b\x55\xae\x83\xc0\x16\x96\x1d\xc5\xbb\x1d\x4d\xb8\xe6\x13\x5a\x05\xef\xb0\x65\x42\xd5\x20\xbd\xb5\x31\xd5\xc2\x6c\xe3\x33\x77\x22\xb4\x50\x90\xc8\x3b\x3d\x58\x4c\xbd\x53\x13\x30\x5c\x2f\xef\x8e\xfe\xf3\x43\x38\x08\x02\x59\xf1\x4e\x98\x70\x3a\x08\xae\xda\xd6\xa1\xd6\x8e\x54\x37\xf4\x2e\x83\xdd\x48\xbb\x9c\xf5\x04\xf2\xae\xb0\x08\x8b\x77\x09\x24\x7b\x27\xe5\xb2\xb2\x7b\x07\xf9\xc4\x66\x5d\xd0\x3b\xe3\x37\xca\x94\x71\xc1\xa6\xe8\x5d\xa2\x9a\xb6\x71\x53\x81\xb4\x4d\xd0\xf2\xa4\x04\x5a\xbc\xc3\xdc\x13\x58\xe5\x36\x5c\x0d\xbf\x6d\xfa\xdf\xe4\x3a\x9e\x5c\x68\x79\xe6\x6f\xef\x0e\xe1\x55\x60\xdf\x6f\xfa\x35\x33\x58\x0c\x09\x24\x86\x0d\xc4\x62\x98\xeb\x86\x71\xf4\xad\x89\x0f\x43\x79\x05\x81\xf4\xec\x5a\xc1\x1d\xa7\x03\x64\x8b\x61\xee\x5a\x1b\xaa\x4e\x3b\x34\x58\x71\xc7\x36\x6c\xaa\x5d\xbf\xc0\x02\x32\x72\x5e\x41\xeb\xde\xe9\xbe\xd1\xbb\xaf\xa5\x6a\xa9\x6d\x8d\x61\x61\xb6\x19\x88\x62\x48\x32\xba\x8d\x78\xd0\x0d\x3f\xb0\x70\xda\xf0\x8a\xc1\xb0\xb5\xaa\x31\x18\xcc\x84\xff\xd4\x0c\x8a\xcf\xde\xca\xb4\xc4\x70\x32\x11\x5e\x0f\x59\xb0\xa5\x3b\x41\xdf\x2c\x39\x2c\x75\x2d\x76\xeb\xc2\xa2\x18\xa4\xe6\x67\xda\xf8\x1d\x66\x06\xf9\xc8\xad\x7e\x5e\x30\xfc\x8b\x5f\x7f\x02\x00\x00\xff\xff\xa7\xdf\x4c\x3d\x35\x02\x00\x00")

func genre() ([]byte, error) {
	return bindata_read(
		_genre,
		"genre",
	)
}

var _genre_modifier = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2f\x48\xcd\xd3\x2d\xcf\x2f\xca\x49\xe1\xe5\x2a\x29\x2d\xca\xd3\x4d\x4a\x2c\x4e\x4d\xe1\xe5\x2a\x4e\xce\xd4\x4d\xcb\xe4\xe5\x4a\x4b\xcc\x2b\x49\x2c\xae\x04\x04\x00\x00\xff\xff\xcf\x4e\xeb\x76\x27\x00\x00\x00")

func genre_modifier() ([]byte, error) {
	return bindata_read(
		_genre_modifier,
		"genre_modifier",
	)
}

var _goal = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\x51\x8e\xec\x28\x0c\x45\xff\x23\x65\x0f\x5e\x00\x6f\x03\xa3\xd1\xe8\xed\x23\xca\x87\x8b\xdc\x14\xa8\x09\x66\x8c\x49\xbd\xf4\xea\x47\x50\xd5\xea\x56\xf7\xfc\x61\x03\xe6\xf8\x5e\xb3\xc7\xbc\x91\x05\x50\x85\x57\x18\x99\xd0\x02\x83\x66\x4e\x94\xe2\x0e\x47\x1f\xd1\x25\xcd\x82\x23\x9c\xd0\xc4\xd5\x62\xbe\xd3\x0d\xdc\xec\x5a\xe7\xa9\xf2\x89\x51\xe5\x21\x9a\x36\xda\x55\x0e\xfa\xed\x03\x2b\x7b\x83\xfe\x95\x8b\xff\x3d\x4f\x1b\x76\xb0\xfd\xcc\x0f\x84\xc5\xb4\x81\x92\x9c\x70\xc4\x54\xa5\x25\x3a\xd8\x46\xb0\x6b\x44\xde\x1c\x15\xb0\x07\x71\xde\xe8\xdf\x16\x61\xeb\x3c\xdd\xe0\xe5\x00\x2d\x7b\x4c\x16\x2e\xd2\xe8\x83\xfb\x40\xe0\x43\x5a\x5d\xe7\x49\x5b\xfa\x82\xf6\x7a\x8d\x69\x79\xf0\x45\x41\x0e\x38\xca\x78\xbc\x56\x25\xf5\x17\x4c\x28\xc5\x13\xeb\x3c\x15\xbe\x48\xf6\x9d\x98\x36\xdc\x6c\x9e\x0e\x7e\xfb\xda\x26\xd3\x0d\x66\xd0\xe7\xbd\xd7\xf6\x93\xb6\xce\xd3\x52\x9b\x9e\x71\xf4\x73\x42\xcd\x11\xaa\xe7\x82\x21\xce\x3a\xaa\x2c\x5c\xc4\x4b\xba\x4a\xed\x32\xe7\x8d\x64\xff\xac\xde\x55\x35\x56\x23\x1e\x80\xcb\xad\xd5\x98\x51\xab\x23\xcf\x0a\xa8\x1b\xf6\xbc\x20\xfb\x2d\x45\x36\x92\x4c\x16\x0f\xcc\x53\xc2\x87\x25\x25\x71\x86\xcd\x53\xd7\xfe\x10\x05\x05\x70\xb2\x10\xd3\x35\x4f\xf8\x53\x52\x4f\x0d\x9a\x96\xe3\x09\xed\x2c\x03\xc0\xd1\x9d\x13\xff\x19\xf6\x4a\x3a\xd1\x45\x3b\xae\x6a\xd0\x28\xad\x3a\x2a\xed\xfd\x3d\xc5\x7c\x5f\xc9\x73\xc5\x3c\x2d\x8a\xc2\x51\x7b\x2d\x47\xb7\x16\xd3\x46\x7f\xf3\x3f\x8e\x8a\x8a\xc1\xdb\x33\xbf\xa1\x9a\xca\x00\x5e\x69\xa9\x85\x3d\x6a\x88\xc5\x0d\xea\x5f\x07\xfb\x10\x73\x57\x4c\x0f\xbe\x63\xdb\x24\xff\xda\x70\x46\xdf\xfb\xf4\x2a\xb5\xd2\x32\x5a\x15\xde\xfa\x64\xdc\x5a\xbd\x28\x66\xeb\xd4\xde\xa2\x64\x37\x3a\x79\x72\x3f\xd7\xe2\xc1\x79\x1d\x7a\x68\xa6\xa5\x04\x31\xb9\x2b\x97\xd0\xf7\xa5\x8b\x73\x11\x67\x8a\xb9\x9a\xb6\x03\xd9\x46\xda\x8b\xbc\x8d\x45\x35\x29\x5d\xf0\x3e\xed\x8f\xc0\x46\x62\x01\x5a\xc9\x42\xcc\x6f\xeb\x3c\xed\xd2\xc6\x38\x0d\x8b\x14\x29\xde\x07\x85\x8f\x76\x39\xf2\x92\x24\x5f\x8e\xaa\x0f\x22\xc9\xd1\xbd\x8b\xe2\xc8\xb7\x64\xdf\xdc\xed\x56\xd2\x22\x99\x0e\xd6\xea\x28\xe6\xc1\xee\xa5\x65\xd3\xeb\x33\x1e\x55\xe5\x19\x1c\xd2\x1f\xe2\xda\x7f\x4b\x40\x09\xd0\x3e\x32\x5f\x66\xec\xe7\x47\x5b\xee\xfc\xaa\xa4\xa8\xa5\x7b\x22\xfb\xf7\x53\x8e\x1e\xaf\x33\xbc\xef\x4f\x51\xff\xe7\x54\xff\x57\xa8\xbe\xe1\xfb\xc6\x7f\x01\x00\x00\xff\xff\xc2\x6d\xb4\x3d\x4f\x04\x00\x00")

func goal() ([]byte, error) {
	return bindata_read(
		_goal,
		"goal",
	)
}

var _goal_prefix = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x0a\xc4\x30\x0c\x44\xd1\x7e\x61\xef\xa0\x32\x0b\xba\x51\x48\x21\x88\x70\x04\x5e\xc9\x58\x03\xc6\xb7\x0f\x6e\xdc\xbc\x66\xe6\x9f\xe8\xd3\xbc\x30\x09\xa0\xff\x06\xf3\x72\x11\xe2\xfb\x19\x4f\xd0\x79\x6b\x36\xed\x02\xad\x93\x2f\x3a\x86\x38\x92\x97\xbf\xfd\x19\x56\x2b\x25\xa2\x91\x80\x3c\xf0\x98\x97\x3d\x1e\xae\x7a\x27\x2f\x57\xf1\x06\x00\x00\xff\xff\x5f\xdc\x0d\x83\x6d\x00\x00\x00")

func goal_prefix() ([]byte, error) {
	return bindata_read(
		_goal_prefix,
		"goal_prefix",
	)
}

var _group_name = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2f\xca\x2f\x2d\xe0\xe5\x8a\x4e\x4b\x4c\x2e\xc9\xcc\xcf\xd3\x51\x48\x4f\xcc\x4b\xd7\x51\x48\x4b\xcc\xcd\xcc\xa9\xd4\x51\x48\x4a\xcc\x4b\xd1\x51\xc8\xc8\x2f\x4a\x49\x8d\xe5\xe5\x8a\xce\x2f\x4a\x4f\xcc\xcb\xac\x4a\x84\x28\xcd\x49\x4d\x4c\x2f\x4d\x8d\x05\x04\x00\x00\xff\xff\x8b\x0b\x76\x10\x43\x00\x00\x00")

func group_name() ([]byte, error) {
	return bindata_read(
		_group_name,
		"group_name",
	)
}

var _mood = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8f\x4d\x8e\x83\x30\x0c\x46\xf7\x91\x7c\x07\x0e\x00\x27\xaa\xba\xf0\x04\x93\x58\x0d\x0e\xf5\x0f\x1d\x6e\x3f\x22\x9d\xa5\x9f\x3e\xe9\xf9\x85\xf0\x3b\x08\xd2\xa6\x61\xae\xe8\x2c\x05\x52\xae\xd8\x1a\x49\x19\x87\x62\xa1\x85\x65\x8d\x3c\x4e\x73\x25\xb3\x2d\x1a\x24\xa5\x86\xbf\x03\xee\xb4\xb2\xa3\xf3\x49\x90\x32\xb6\x7d\x40\xaf\x3d\x4a\xf5\xe5\xd0\x7e\xf6\xd7\x40\xb8\xae\x9c\xbf\xb3\x47\x8d\xbd\x6b\x0f\x9b\x27\xdc\xc3\x58\xca\x13\xd2\xa7\xf2\x6e\x9c\xb1\x41\x7a\x58\x46\xbd\xe6\x69\x53\x2e\xd5\x49\x58\xca\x3c\x39\xa9\xf2\x76\x7d\xc7\x2c\xd2\xcf\x7f\x29\x8b\x1d\xac\xc3\x51\xb4\xf7\x93\x2e\x48\xa8\x6e\x17\xa4\x38\x7e\x08\x1d\xd2\xc9\xbd\x91\x38\xa4\x83\x30\xd3\x08\x58\x95\x70\xbf\xee\xa6\xab\xb1\x55\x48\x56\xbb\xfa\x82\xb2\x2e\xf6\x21\x72\x48\xd6\xfa\x67\x39\x30\xd3\x7a\x3b\x9c\xc4\x08\x92\x74\x73\x6c\x85\xf3\xfd\xa5\x2b\x4a\xa1\x79\x7a\x07\xeb\xeb\x9a\xa7\x90\xb0\xc0\xf6\x9c\x1a\xbb\x37\x82\x64\xe8\xac\x77\xd3\x5f\x00\x00\x00\xff\xff\x51\xd0\x60\x52\x6b\x01\x00\x00")

func mood() ([]byte, error) {
	return bindata_read(
		_mood,
		"mood",
	)
}

var _perspective = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x32\x72\xe1\xe5\x32\x76\xe1\xe5\x4a\xcb\x2c\x2a\x2e\xd1\x2d\x48\x2d\x2a\xce\xcf\xe3\xe5\x2a\xc9\xc8\x2c\x4a\x41\xf0\xf2\x0b\x74\x53\xf2\xcb\xf3\x78\xb9\x32\x8b\xf3\x73\x53\x4b\x8a\x32\x93\x79\xb9\x8a\x33\x53\x52\x75\xcb\x32\x53\xcb\x01\x01\x00\x00\xff\xff\x03\x49\xd1\xa5\x42\x00\x00\x00")

func perspective() ([]byte, error) {
	return bindata_read(
		_perspective,
		"perspective",
	)
}

var _setting = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\xce\xc4\x36\x08\xdd\x7f\xd2\xdc\x81\x03\xf8\x08\x55\xf5\x49\xed\x09\xba\x1d\x8d\x2a\x62\x33\x31\x8d\x8d\x53\x8c\x13\xe5\xf6\x15\xce\xb4\x52\x17\xfd\xd9\x24\x80\x1e\xf0\xf2\x78\x69\x02\x3f\xe0\x8f\xf0\xdd\xc9\x8c\x65\xfd\x35\x51\x8f\xca\xbb\x71\x93\x6f\x78\xee\x05\x85\x2c\x40\xdf\x31\x52\xcf\xbc\x07\xa8\xad\x49\x80\x6e\xa8\x01\x14\x59\x96\x76\x06\xe0\x5e\x50\x52\x00\xf3\x4a\x80\xa5\xa1\x39\x72\x88\xcd\x5c\x5b\x29\xa4\xb1\x61\x37\x52\x6f\x56\xa2\x09\xb0\xa6\x0b\x6f\x14\x60\xe1\x78\xc5\x42\x01\x7c\xc9\xa9\x14\x37\x9f\x32\x24\x5e\x10\xb1\x5b\xa1\xd7\xe3\x8b\xff\x95\x6a\x64\xbb\x02\x9c\xa8\x94\xdb\xe8\x14\x60\x55\x3c\xe8\x42\x4d\x01\x0e\x2e\x05\x57\x0a\xb0\xb1\xac\xa9\xd5\x00\x9d\xce\xc9\x24\xb7\x7d\x67\x59\xa1\x62\x29\x01\x84\xd7\x6c\xb1\x8c\x25\x40\xc4\x83\x02\x14\x5c\x2e\x65\xb1\x1c\x60\x47\xdd\xee\xa7\xe3\x4b\x33\x9f\x66\x31\x93\xfc\x37\x35\xec\x2c\x2d\x40\xe1\x45\x51\xaf\x00\xbf\x0d\xd9\x6e\x66\x0b\x76\xaa\x24\x16\x20\x0d\x59\xc9\xa5\xdd\x95\xbb\xbf\x0d\x0f\x52\x17\x8f\xba\x0d\x45\xc7\x44\x16\xaa\x18\xe0\xc0\x52\xe8\x0a\x50\x51\x3a\x3b\xf6\xdd\x1c\x35\x07\xaf\xae\x62\x7b\xbf\x39\x52\x80\xdc\x8c\xca\xcd\xcf\x32\xc1\x33\x71\x37\x14\x83\xf7\xb0\xa1\x14\xe0\xce\x23\xc1\x8e\xde\xae\x14\x49\xec\x93\x08\xa1\xfe\x05\xac\x4d\x2c\x43\x7b\xc3\xcf\x14\xa9\x2e\xae\xdd\x49\xb4\xc1\x42\xbe\x1a\x7e\xca\xca\xdd\x2a\xf6\xd7\xe3\xeb\xc9\x02\x28\x80\xc5\x48\x05\x8d\x40\x09\xcb\x3c\x0e\x0b\xb4\x61\xa4\xb7\x9d\x02\x0c\x49\xa4\x27\x4e\x4f\xcc\x78\xd5\x36\xdc\x46\x2c\xd0\x47\xad\x5e\x67\x81\x93\xc5\x3e\x61\xdf\x95\x65\x9d\x21\x0e\x1b\xf5\xd6\xbe\x73\x22\x78\x5e\x6d\x28\x64\xc2\x14\x00\x21\xb6\xba\x8f\xd9\x85\xd0\xc7\x52\x51\x59\xc8\x93\xa4\x84\xd5\x83\x79\xeb\x8a\x3a\xab\xcb\x90\xed\x06\xa7\x51\x77\x77\xe9\xeb\xf1\x95\x86\x2f\x83\x27\xc2\xaa\x84\x06\x49\xdb\x58\xb3\x85\x29\x25\x49\x72\x39\x3c\x3c\x9b\x16\x5f\xea\xdf\xcc\x24\xc0\x72\xe0\x7d\x16\x84\x8a\xbd\xf3\x41\xf0\x2e\xad\x4d\x62\x47\x2b\x11\xa5\x01\xe9\x98\xf6\xf0\x9a\x91\x2a\x2f\x85\xfc\x1c\x9f\x5f\xc4\xe7\x2a\xf1\x2a\x7f\x2e\xf9\x8e\x19\x15\xa3\x91\xfe\xdd\x5c\xdb\xd4\xe3\x7f\xc3\x7f\x1f\x44\x72\xe3\x7f\x21\x41\xee\xdd\xcf\xef\x24\x4e\x9c\xdf\x6f\x5c\xc9\x87\xec\x84\x77\x7d\x61\xb5\x9c\xf0\x72\xeb\xfb\x11\x51\x3e\xee\xba\x0b\xaf\xc7\x57\xbb\xcd\xb5\x60\xdc\xbc\x73\xfe\x08\xff\xb0\xfe\x49\x85\xf6\x3c\xbd\x7c\x66\x74\xa7\xda\x50\xf3\xf7\xca\xb3\x9a\x5a\xd9\x33\xcb\xeb\x8f\x00\x00\x00\xff\xff\x47\xd8\x27\xba\x97\x04\x00\x00")

func setting() ([]byte, error) {
	return bindata_read(
		_setting,
		"setting",
	)
}

var _setting_description = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x51\x41\x96\xe5\x20\x08\xdc\xfb\x9e\x47\xc9\xa1\x50\x49\xc2\x34\x81\x34\xca\x9f\x76\x4e\x3f\x0f\x93\x4d\xef\x10\x0b\xaa\xa8\x1a\x24\x33\xa7\x8b\xaa\x69\xaf\x7a\x53\xcd\x09\x45\xed\x52\xef\x39\xf5\x5b\xf5\x6b\xe6\x04\x4c\x28\x39\xed\x3e\xdc\xa8\x8f\x00\x81\x54\x42\x19\x39\xed\x6a\x87\x8e\x11\xff\xd7\xec\x03\x8d\xd6\xe8\xae\x56\xa8\xb5\x68\x37\x90\x03\x6d\x75\x4f\xe5\x99\x53\xf1\x3e\x98\xe4\xc8\xa9\x1a\xe2\x1d\x04\x05\xa4\xa9\x60\xcb\xe9\xd6\xdb\x19\x2c\xa7\x3e\x2c\x06\xb7\x7e\x21\x3f\xe8\x73\xde\xa2\x8b\xdd\xa0\x91\x42\x1d\xf4\xc1\x9c\xaa\xb2\xba\xed\xce\x39\x09\x7e\xd0\x36\x94\xb6\xf0\xef\x06\x9e\x5b\xc3\xaa\x06\x23\xf6\x0f\xe8\x03\x77\xe7\xdf\x5d\x83\xb1\x91\xec\xd8\xd7\x8b\xe9\x83\x21\xf4\x43\xc5\x20\x8e\x74\x21\x39\xa1\xd0\x78\x14\xaa\xfd\x9e\x86\x3e\x54\xa8\x9f\xef\x4d\x34\xa8\x42\x10\x40\xad\x0c\x74\x05\xa4\x20\xf8\xa0\x25\xb2\xa8\x2d\x60\x43\x68\xc1\x72\x98\x97\x32\x73\xc2\x9f\xe7\xb8\x1d\x8a\xf3\xb2\xeb\x60\xb8\xd4\xde\x52\xf5\x9a\x39\xfd\x45\xe6\xed\x7c\x9d\x75\x69\xd4\xab\x7e\xd0\x82\xe2\x8f\x72\xac\x63\xff\xf1\x37\x84\x6f\x07\x0a\xf9\xdf\x4e\x16\x39\x2a\xb7\x6d\x87\x7e\xd2\x63\xb5\xcb\xfb\x80\xc2\x98\xd3\xa5\x0d\x2d\x62\xe6\xb9\xf4\xed\xac\x30\x1e\x23\x49\xbe\x56\x51\xdc\x64\x15\x11\x75\x1c\x99\xd3\x05\xc7\x53\xec\xa6\xff\x42\x94\xe9\x04\xfe\x1f\x00\x00\xff\xff\xf9\xf5\xb1\xb7\x57\x02\x00\x00")

func setting_description() ([]byte, error) {
	return bindata_read(
		_setting_description,
		"setting_description",
	)
}

var _template = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\x51\x6a\xf3\x30\x10\x84\xdf\x7f\xf8\xef\x30\x07\xf0\x09\x4c\x29\x7b\x8f\x90\x87\xb5\xb5\xb6\x4c\x25\xad\xd1\xae\x71\x7d\xfb\x92\x90\x12\x42\x5c\x53\x28\x85\xbe\x89\x45\x33\xf3\x49\x3b\x2f\xfc\x0a\xca\xaa\x81\x40\xa3\x94\x2a\x84\x91\xb3\x80\x3b\x5d\x1c\xe4\x51\xb2\x10\xb8\x84\xcf\x73\x03\x5a\xa7\x14\x7a\xae\x81\xfe\xff\xfb\x4a\x7e\xbf\x83\x35\x4a\x15\x6c\xba\x60\x4e\xbc\x81\x0d\xd4\x47\xae\xdc\xbb\xd4\x8b\x4a\x39\x1d\x18\x3d\x70\x34\x87\x66\x6d\xd1\x59\xcd\x09\x64\xe2\x3e\x95\xf1\xc0\xd6\x23\x3b\x9c\xdf\xc4\x2e\x46\xbd\xdc\x35\xc7\x19\xbb\xc0\x3b\x1f\x76\x32\xf1\xe6\x29\xe5\xfc\xa3\x98\x53\x9e\xde\xd1\x89\xaf\x22\xa5\x41\x66\x8b\xcb\x0c\x1d\x1a\x74\x49\x4a\x80\x0e\x67\x78\x94\xdb\x3b\xdb\xa2\x59\x83\xdd\x56\xf7\x38\xba\xf2\x5e\x47\xf6\x87\x30\xa6\x3e\xc2\x25\x25\x03\xc3\x5c\xeb\x06\x1d\xf6\x0a\xf8\x8d\xd2\xb5\x9c\x56\xde\xec\xf7\xb9\x9f\x23\x3f\x02\x00\x00\xff\xff\x8e\xfc\x24\x3c\x50\x03\x00\x00")

func template() ([]byte, error) {
	return bindata_read(
		_template,
		"template",
	)
}

var _theme = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x52\x51\xae\xec\x3a\x08\xfb\x8f\x94\x3d\x74\x03\x6f\x51\x4c\xea\x26\x9c\x43\x43\x44\xe8\xf4\xcd\xee\xaf\x48\xe7\xde\x3f\x40\x80\x6d\xcc\xbc\xec\xcd\x6f\x92\x9c\x8a\xea\x2f\xf7\x9a\xd3\x41\x76\xae\x40\xf4\x8d\x9c\x76\x90\xb7\x9c\x86\xde\xb0\x9c\x86\xe1\xe7\xda\xb9\x20\xa7\xa6\x03\x39\xdd\x14\x55\x50\x54\x0e\x63\xf4\x7d\x36\x1e\x39\x19\xde\xe8\x15\x39\xbd\xe0\x46\x9f\x40\x38\xd4\x2a\xbf\xd1\x31\x67\x4e\xc5\xf8\x44\x4e\xe3\xea\x3c\xdb\x89\xee\x39\x91\x30\xfa\xcc\x89\xa7\x0a\x39\x6b\xcf\xa9\x34\xd2\x99\x93\x37\x6c\x85\xad\x08\x36\x3d\x36\xe1\x23\xc0\xc8\x91\x53\x35\xbd\xb9\xd7\xed\x1a\x39\xf1\x79\xaa\x39\x09\xfb\x27\x27\x47\x69\x5d\x45\x6b\xc4\xba\xaa\x64\x4c\x9d\xe7\x19\xe4\x84\xeb\x02\x70\xa3\x9d\x1f\xac\x20\x41\xb2\xb1\xc8\xc3\x70\x0e\x2a\xd8\xdc\xe8\x0d\xc9\x09\xff\x0f\x51\xfb\xd2\xaa\x06\xec\x39\xfd\x5c\xd3\xd7\x29\x06\xb9\xb1\xfa\xda\x5d\xd4\xec\x1a\x4f\xdf\x1a\x62\xff\x4e\x85\x0a\xf4\x3d\x24\x44\x78\xab\xc9\x9e\xd3\xd5\x0f\x62\x7b\x20\x1b\x95\xc7\x03\x32\xe7\x83\x0b\x07\x9f\xee\x10\xe1\x8a\x1e\x48\x31\x38\xb9\xd7\x4b\xc8\x96\x4e\xd3\x97\xfa\x66\x5c\x9b\xcf\x00\x74\x23\x87\x19\xa6\xc7\xf0\x73\xaa\x7f\x92\x22\xdd\xe8\x70\xd8\xf6\xb5\x75\xa7\x5e\x16\x62\x2c\x5d\xc1\x0b\xf8\xef\x17\x18\x2b\x41\x14\x01\x7b\x5a\x70\x7f\x1f\x64\xb6\x25\xe8\x45\x0f\xdb\xe9\x74\x8e\xad\xa8\x08\x8a\xff\xe5\x9f\x53\x25\xdb\xd1\x57\xde\x68\x0c\xfe\x9e\x95\xf6\x27\x58\xa6\x6a\x2f\x18\x1e\x27\x39\xae\xe5\x77\x3c\xa3\x7d\x62\x27\x0c\xea\x9f\x81\x19\x88\x27\xcb\x67\xf9\xb6\x6e\x19\x2f\x16\x1b\xec\x0a\x0d\xc2\xd1\xf3\x0a\xa3\x62\xb2\xe8\x4d\xf6\xbc\xe8\x49\xde\x70\x92\x73\x99\x7f\x02\x00\x00\xff\xff\x1c\x81\xd6\xd2\xe9\x02\x00\x00")

func theme() ([]byte, error) {
	return bindata_read(
		_theme,
		"theme",
	)
}

var _wildcard = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x53\x41\x92\xe4\x28\x0c\xbc\x77\x44\xff\x41\x0f\xc0\x3f\xd8\xd8\x8f\x38\xea\x40\x41\x96\xd1\x34\x48\x0e\x21\xbb\xd6\xf3\xfa\x0d\xe8\xaa\x99\xdd\x39\x59\x16\x20\x65\x2a\x53\x4f\xf6\x42\x7f\xc5\xbf\x69\x2d\x51\xf2\x92\x2d\x3e\x25\xd0\x33\x3a\x2c\x69\xd5\xc3\x02\x6d\x16\xf7\xc2\x69\x11\x3d\x51\x03\xa5\x1a\xaf\x16\x9d\x55\x02\x19\xdc\x34\x50\xd5\xe7\xb2\x6b\xbd\x02\x65\x43\x6c\x4b\xe5\x2f\x04\x8a\xf7\xee\x16\x93\x07\x4a\xd1\xf2\x5d\xa3\xe5\x25\x1d\xae\x87\xdf\x28\x9a\x53\xf7\xab\xe2\xf3\x23\xa9\xb8\x69\xad\xc8\x34\xc1\xac\x3f\x8e\xee\xa4\x02\xba\x1f\xee\xa3\x8b\x4a\xbd\xc8\x9f\xfa\x4a\xf4\x77\xa6\x80\x9a\x1e\x1d\x81\x2e\x3d\x8c\x4e\xe5\x84\xdb\xe7\x07\x0b\x3d\x0b\xa7\x42\xeb\xa5\x07\xe1\x9f\xbd\x6a\x46\x20\xe7\x06\x7a\x18\xf0\x13\xfd\xf5\xd7\xab\x3e\x3b\x65\x1d\x94\xbf\x13\x3b\x90\x3b\x1d\xfb\x2c\x49\xbd\x18\xcb\xd7\x77\xbc\xc1\xe9\xce\xdb\x06\x0b\xb3\xf3\x16\x1b\x46\xb2\x53\x89\x96\x61\x37\x7a\x16\x08\x4e\xd8\xbc\xbe\x76\xd7\x9d\x9a\x9e\x2c\x5b\xa0\x1f\x47\xdb\xff\x8b\x6c\xdc\x98\x1c\x4a\x3c\x31\xb9\xae\x95\x1f\x08\xc4\x8e\x16\x88\xe5\x84\xb8\xda\xb5\xf4\xaa\x63\x7e\x25\xca\xa4\xf6\x5b\xad\x01\x77\x71\x8b\x27\x6a\x9d\x2d\x86\x4a\xfb\x08\x97\xa2\xfa\x75\xa3\x86\xf1\x8a\xd3\xe7\xc7\x77\x4b\x47\x4c\x05\x7d\x62\xdf\x6b\xbc\x60\xb4\x36\xb5\x58\xa9\xa2\xf7\x39\xd5\x16\xbd\x60\x48\x9b\x7a\xa0\x0d\x3a\x85\xbf\x02\xf5\xc4\x90\x84\x40\x85\xfb\x40\x15\x68\xb7\x71\xd8\xda\xec\x9c\x54\xbf\x66\x60\x51\xb2\x36\x72\xe3\x93\xe3\x1b\x6d\x2a\xb1\x56\xc8\xc6\xb2\xd1\x5d\x7b\xa7\x07\x6f\xc5\xfb\xeb\x34\xd2\x9a\x54\x77\x58\x74\x3e\x31\x6a\xb5\x1d\xce\xe3\xe7\x46\x7d\xaf\xec\x3d\x19\x20\xd4\x34\xe3\xfd\x46\x08\x6d\x2f\xb1\x73\x27\x15\x5a\x93\xc5\x87\x4f\x00\x53\x6b\x7b\x79\x33\xd6\x54\xd0\xae\x40\xc9\x30\xaa\xb3\x5f\x7f\x4a\x20\x40\x26\x57\x4a\xc3\x7e\xc9\x69\x9d\xf6\xed\x03\xc6\xb0\xfe\x18\x09\x9a\x1a\xa3\xbf\xd9\x1c\x52\x35\x7d\xc5\x7b\x05\xc5\x54\x18\x27\x1a\xe4\x17\x9b\xaa\xde\x49\x1f\xb4\xee\xa6\x09\xf9\xb0\x58\xeb\x45\x1b\x64\xf0\x43\xa6\x61\x75\xc8\xb7\xa0\x63\x33\x60\x94\x8e\xee\xda\xf8\xe7\x04\x4d\xba\x8f\x4f\xff\x9f\xd2\x2a\x95\x05\xe1\x46\x15\x31\xc3\xe6\x1e\x7d\x7e\x64\x74\xde\xe4\xbd\x33\xd3\xb7\x76\x88\x8c\x29\xb3\x50\x63\xc9\xaf\x1a\x19\xdd\xed\x48\xce\x03\xb3\xc3\x2c\xb2\xfc\x1a\xfe\xfd\xe0\xea\x0b\x0b\x55\x9c\xa8\x84\xcc\xae\xf6\x5b\x9a\xc7\x21\x72\x85\x97\x8b\x6f\x34\xc5\xff\x37\x00\x00\xff\xff\x7a\x33\x1e\x93\x31\x04\x00\x00")

func wildcard() ([]byte, error) {
	return bindata_read(
		_wildcard,
		"wildcard",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"character": character,
	"character_description": character_description,
	"character_description_post": character_description_post,
	"genre": genre,
	"genre_modifier": genre_modifier,
	"goal": goal,
	"goal_prefix": goal_prefix,
	"group_name": group_name,
	"mood": mood,
	"perspective": perspective,
	"setting": setting,
	"setting_description": setting_description,
	"template": template,
	"theme": theme,
	"wildcard": wildcard,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"character": &_bintree_t{character, map[string]*_bintree_t{
	}},
	"character_description": &_bintree_t{character_description, map[string]*_bintree_t{
	}},
	"character_description_post": &_bintree_t{character_description_post, map[string]*_bintree_t{
	}},
	"genre": &_bintree_t{genre, map[string]*_bintree_t{
	}},
	"genre_modifier": &_bintree_t{genre_modifier, map[string]*_bintree_t{
	}},
	"goal": &_bintree_t{goal, map[string]*_bintree_t{
	}},
	"goal_prefix": &_bintree_t{goal_prefix, map[string]*_bintree_t{
	}},
	"group_name": &_bintree_t{group_name, map[string]*_bintree_t{
	}},
	"mood": &_bintree_t{mood, map[string]*_bintree_t{
	}},
	"perspective": &_bintree_t{perspective, map[string]*_bintree_t{
	}},
	"setting": &_bintree_t{setting, map[string]*_bintree_t{
	}},
	"setting_description": &_bintree_t{setting_description, map[string]*_bintree_t{
	}},
	"template": &_bintree_t{template, map[string]*_bintree_t{
	}},
	"theme": &_bintree_t{theme, map[string]*_bintree_t{
	}},
	"wildcard": &_bintree_t{wildcard, map[string]*_bintree_t{
	}},
}}
